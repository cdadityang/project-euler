=begin
Q: Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
  By starting with 1 and 2, the first 10 terms will be:
	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
  find the sum of the even-valued terms.

Ans: Keep adding numbers when ever they are even. i = 1, prev = prev + i -> Updates previous number & i = prev

=end


# Method 1: Fastest - Takes about 0.007 ms
sum = 0
prev = 0
i = 1

while i < 4000000 do
  sum += i if (i % 2 == 0)
  prev, i = i, i + prev
end

puts "Method 1: #{ sum }"


# Method 2: Recursion - Takes about 1.5 sec
def fib(n)
  return 0 if n <= 0
  return 1 if n == 1

  return fib(n - 1) + fib(n - 2)
end

arr = []

(1..).each do |n|
  f = fib(n)
  break if f > 4000000
  arr << f if f % 2 == 0
end

puts "Method 1: #{ arr.reduce(:+) }"